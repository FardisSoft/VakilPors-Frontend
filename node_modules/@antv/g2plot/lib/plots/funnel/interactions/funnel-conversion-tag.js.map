{"version":3,"file":"funnel-conversion-tag.js","sourceRoot":"","sources":["../../../../src/plots/funnel/interactions/funnel-conversion-tag.ts"],"names":[],"mappings":";;;;AAAA,+BAAkC;AAClC,mCAAoD;AACpD,6CAA0E;AAC1E,+CAA0E;AAC1E,iDAA6D;AAG7D;;GAEG;AACH;IAAyC,+CAAM;IAA/C;QAAA,qEA8CC;QA7CS,eAAS,GAAG,KAAK,CAAC;;IA6C5B,CAAC;IA5CQ,oCAAM,GAAb,UAAc,OAAsB;QAApC,iBA2CC;QA1CC,WAAW;QACX,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACX,IAAA,WAAW,GAAmB,OAAO,YAA1B,EAAE,YAAY,GAAK,OAAO,aAAZ,CAAa;YAC9C,IAAM,eAAa,GAAG,YAAY,CAAC,CAAC,CAAC,8BAAoB,CAAC,CAAC,CAAC,qBAAkB,CAAC;YACvE,IAAA,IAAI,GAAK,IAAI,CAAC,OAAO,KAAjB,CAAkB;YAC9B,UAAU;YACV,IAAM,KAAK,GAAG,WAAW,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChE,IAAA,UAAG,EAAC,KAAK,EAAE,UAAC,CAAC,EAAE,KAAK;gBAClB,yBAAyB;gBACzB,IAAM,oBAAoB,GAAG,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;gBAE3D,IAAM,WAAW,GAAG,IAAA,aAAM,EACxB,IAAA,UAAG,EAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,EACzC,UAAC,EAAQ;wBAAN,IAAI,UAAA;oBAAO,OAAA,IAAI,KAAK,4BAAmB;gBAA5B,CAA4B,CAC3C,CAAC;gBAEF,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAEjC,IAAA,WAAI,EAAC,WAAW,EAAE,UAAC,UAAU;oBAC3B,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;wBAClC,CAAC,CAAC,UAAU,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC;qBAC7C;gBACH,CAAC,CAAC,CAAC;gBAEH,IAAM,IAAI,GAAG,IAAA,UAAG,EAAC,CAAC,EAAE,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,CAAC;gBAE3D,eAAa,CAAC;oBACZ,KAAK,EAAE,CAAC;oBACR,KAAK,OAAA;oBACL,OAAO,wCACF,OAAO;wBACV,aAAa;wBACb,YAAY,EAAE,IAAA,sBAAa,EAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,GACjD;iBACF,CAAC,CAAC;gBAEH,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACnB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IACH,0BAAC;AAAD,CAAC,AA9CD,CAAyC,WAAM,GA8C9C;AA9CY,kDAAmB","sourcesContent":["import { Action } from '@antv/g2';\nimport { each, filter, get, map } from '@antv/util';\nimport { conversionTag as basicConversionTag } from '../geometries/basic';\nimport { CONVERSION_TAG_NAME, transformData } from '../geometries/common';\nimport { compareConversionTag } from '../geometries/compare';\nimport { FunnelOptions } from '../types';\n\n/**\n * Funnel 转化率跟随 legend 变化事件\n */\nexport class ConversionTagAction extends Action {\n  private rendering = false;\n  public change(options: FunnelOptions) {\n    // 防止多次重复渲染\n    if (!this.rendering) {\n      const { seriesField, compareField } = options;\n      const conversionTag = compareField ? compareConversionTag : basicConversionTag;\n      const { view } = this.context;\n      // 兼容分面漏斗图\n      const views = seriesField || compareField ? view.views : [view];\n      map(views, (v, index) => {\n        // 防止影响其他 annotations 被去除\n        const annotationController = v.getController('annotation');\n\n        const annotations = filter(\n          get(annotationController, ['option'], []),\n          ({ name }) => name !== CONVERSION_TAG_NAME\n        );\n\n        annotationController.clear(true);\n\n        each(annotations, (annotation) => {\n          if (typeof annotation === 'object') {\n            v.annotation()[annotation.type](annotation);\n          }\n        });\n\n        const data = get(v, ['filteredData'], v.getOptions().data);\n\n        conversionTag({\n          chart: v,\n          index,\n          options: {\n            ...options,\n            // @ts-ignore\n            filteredData: transformData(data, data, options),\n          },\n        });\n\n        v.filterData(data);\n        this.rendering = true;\n        v.render(true);\n      });\n    }\n    this.rendering = false;\n  }\n}\n"]}