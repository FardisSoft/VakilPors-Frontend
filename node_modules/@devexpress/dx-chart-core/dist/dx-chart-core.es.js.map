{"version":3,"file":"dx-chart-core.es.js","sources":["../src/constants.ts","../src/utils/scale.ts","../src/plugins/scale/computeds.ts","../src/plugins/layout-manager/computeds.ts","../src/plugins/axis/computeds.ts","../src/plugins/series/computeds.ts","../src/plugins/stack/computeds.ts","../src/plugins/animation/computeds.ts","../src/utils/hover-state.ts","../src/utils/common.ts","../src/plugins/tooltip/computeds.ts","../src/plugins/zoom-and-pan/computeds.ts","../src/plugins/controller-component/computeds.ts","../src/utils/series.ts","../src/utils/legend.ts","../src/utils/event-tracker.ts","../src/utils/animation.ts"],"sourcesContent":["/** @internal */\nexport const HORIZONTAL = 'horizontal';\n/** @internal */\nexport const VERTICAL = 'vertical';\n/** @internal */\nexport const TOP = 'top';\n/** @internal */\nexport const BOTTOM = 'bottom';\n/** @internal */\nexport const LEFT = 'left';\n/** @internal */\nexport const RIGHT = 'right';\n/** @internal */\nexport const MIDDLE = 'middle';\n/** @internal */\nexport const END = 'end';\n/** @internal */\nexport const START = 'start';\n/** @internal */\nexport const LINEAR = 'linear';\n/** @internal */\nexport const BAND = 'band';\n/** @internal */\nexport const ARGUMENT_DOMAIN = 'argument-domain';\n/** @internal */\nexport const VALUE_DOMAIN = 'value-domain';\n/** @internal */\nexport const HOVERED = 'hovered';\n/** @internal */\nexport const SELECTED = 'selected';\n/** @internal */\nexport const DIFFERENCE = 3;\n","import {\n  scaleLinear as d3ScaleLinear, scaleBand as d3ScaleBand,\n} from 'd3-scale';\nimport {\n  ARGUMENT_DOMAIN, VALUE_DOMAIN,\n} from '../constants';\nimport {\n  ScaleObject, FactoryFn, DomainInfo, NumberArray, DomainBounds, DomainItems,\n} from '../types';\n\n/** @internal */\nexport const scaleLinear: FactoryFn = d3ScaleLinear as any;\n\nexport const scaleBand: FactoryFn = () => (\n  d3ScaleBand().paddingInner(0.3).paddingOuter(0.15) as any\n);\n\n/** @internal */\nexport const isHorizontal = (name: string, rotated: boolean) => (\n  name === ARGUMENT_DOMAIN === !rotated\n);\n\n// tslint:disable-next-line: ban-types\nconst makeScaleHelper = <T extends Function>(linear: T, band: T) => {\n  const func: any = (scale: ScaleObject, ...args: any[]) => {\n    const choosen = 'bandwidth' in scale ? band : linear;\n    return choosen(scale, ...args);\n  };\n  return func as T;\n};\n\nconst getLinearScaleWidth = (_: ScaleObject) => 0;\n\nconst getBandScaleWidth = (scale: ScaleObject) => scale.bandwidth!();\n\n/** @internal */\nexport const getWidth = makeScaleHelper(getLinearScaleWidth, getBandScaleWidth);\n\n/** @internal */\nexport const getValueDomainName = (name?: string) => name || VALUE_DOMAIN;\n\nconst floatsEqual = (a: number, b: number) => Math.abs(a - b) < Number.EPSILON;\n\n/** @internal */\nexport const rangesEqual = (r1: Readonly<NumberArray>, r2: Readonly<NumberArray>) =>\n  floatsEqual(r1[0], r2[0]) && floatsEqual(r1[1], r2[1]);\n\nconst wrapLinearScale = (scale: ScaleObject) => scale;\n\nconst wrapBandScale = (scale: ScaleObject): ScaleObject => {\n  const ret: any = (value: any) => scale(value) + scale.bandwidth!() / 2;\n  Object.assign(ret, scale);\n  return ret;\n};\n\nconst wrapScale = makeScaleHelper(wrapLinearScale, wrapBandScale);\n\n/** @internal */\nexport const makeScale = ({ factory, domain }: DomainInfo, range: NumberArray) => {\n  const scale = (factory || scaleLinear)().domain(domain).range(range);\n  return wrapScale(scale);\n};\n\n// It is implicitly supposed that Chart can accept any d3 scale. It is wrong.\n// The followings notes show that. d3 scales are not seamlessly interchangeable themselves\n// (i.e. band scale has no \"invert\", continuous scale has no \"bandwidth\").\n// We have to use \"adapters\" to mitigate the differences.\n// Hence Chart can actually accept any object that matches \"adapter\" interface.\n// TODO: We should update reference accordingly. There might be breaking changes though.\n\nconst scaleLinearBounds = (scale: ScaleObject, bounds: DomainBounds): NumberArray => (\n  bounds.map(scale) as NumberArray\n);\n\n// There is an issue - when range is \"inverted\" values are scaled incorrectly.\n//   scaleBand().domain(['a', 'b', 'c']).range([0, 60])('b') === 20\n//   scaleBand().domain(['a', 'b', 'c']).range([60, 0])('b') === 20 (should be 40)\nconst scaleBandBounds = (scale: ScaleObject, bounds: DomainBounds): NumberArray => {\n  const cleanScale = scale.copy().paddingInner!(0).paddingOuter!(0);\n  const fullRange = scale.range();\n  const sign = Math.sign(fullRange[1] - fullRange[0]);\n  return sign >= 0\n    ? [cleanScale(bounds[0]), cleanScale(bounds[1]) + cleanScale.bandwidth!()]\n    : [cleanScale(bounds[0]) + cleanScale.bandwidth!(), cleanScale(bounds[1])];\n};\n\nconst moveLinearScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number,\n): DomainBounds => {\n  const fullRange = scale.range();\n  const sign = Math.sign(fullRange[1] - fullRange[0]);\n  const range = scaleLinearBounds(scale, bounds);\n  let r0 = range[0] + delta;\n  let r1 = range[1] + delta;\n  // Check if new range is outside of the left border.\n  if (Math.sign(r0 - fullRange[0]) !== sign) {\n    r0 = fullRange[0];\n    r1 = r0 + range[1] - range[0];\n  }\n  // Check if new range is outside of the right border.\n  if (Math.sign(fullRange[1] - r1) !== sign) {\n    r1 = fullRange[1];\n    r0 = r1 - range[1] + range[0];\n  }\n  const newBounds: DomainBounds = [scale.invert!(r0), scale.invert!(r1)];\n  return rangesEqual(bounds, newBounds) ? bounds : newBounds;\n};\n\n// This is pointer \"delta\" processing specific for \"band\" scale.\n// If pointer delta is significantly smaller than band size (0.3) then movement should be skipped\n// and current delta should be added to a next one (from a new \"move\" event).\n// Now there is no code that accumulates deltas.\n// In order to allow band scrolling at least somehow the following is applied - if pointer delta\n// is at least greater than 30 pixel then minimal movement is performed.\n// TODO: Make proper delta accumulation!\nconst adjustBandScaleMoveStep = (delta: number, step: number) => {\n  const ratio = Math.abs(delta / step);\n  const sign = Math.sign(delta / step);\n  if (ratio >= 0.5) {\n    return sign * Math.round(ratio);\n  }\n  if (ratio >= 0.3) {\n    return sign;\n  }\n  if (Math.abs(delta) > 30) {\n    return sign;\n  }\n  return 0;\n};\n\n// Band case is processed separately to preserve categories count in the bounds range.\n// If common inversion mechanism is used start and end bounds cannot be inverted independently\n// because of rounding issues which may add or remove categories to the new bounds.\nconst moveBandScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number,\n): DomainBounds => {\n  const domain = scale.domain();\n  const fullRange = scale.range();\n  const step = (fullRange[1] - fullRange[0]) / domain.length;\n  const rangeStep = adjustBandScaleMoveStep(delta, step);\n  if (rangeStep === 0) {\n    return bounds;\n  }\n  const range = scaleBounds(scale, bounds);\n  const range0 = Math.round((range[0] - fullRange[0]) / step);\n  const range1 = range0 + Math.round((range[1] - range[0]) / step) - 1;\n  let new0 = range0 + rangeStep;\n  let new1 = range1 + rangeStep;\n  if (new0 < 0) {\n    new0 = 0;\n    new1 = new0 + range1 - range0;\n  }\n  if (new1 > domain.length - 1) {\n    new1 = domain.length - 1;\n    new0 = new1 - range1 + range0;\n  }\n  if (new0 === range0 || new1 === range1) {\n    return bounds;\n  }\n  return [domain[new0], domain[new1]];\n};\n\n// Defines how much linear scale can be zoomed it.\n// I.e. if original scale domain has size of 1, then fully zoomed scale domain has size\n// of 1 / LINEAR_SCALE_ZOOMING_THRESHOLD.\nconst LINEAR_SCALE_ZOOMING_THRESHOLD = 1000;\n\nconst growLinearScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number, anchor: number,\n): DomainBounds => {\n  const fullRange = scale.range();\n  const minRangeThreshold = (fullRange[1] - fullRange[0]) / LINEAR_SCALE_ZOOMING_THRESHOLD;\n  const sign = Math.sign(fullRange[1] - fullRange[0]);\n  const range = scaleBounds(scale, bounds);\n  // If zooming in and initial range is already too small then do nothing.\n  if (delta > 0 && Math.abs(range[1] - range[0]) <= Math.abs(minRangeThreshold)) {\n    return bounds;\n  }\n  // If zooming out and initial range is already too large then do nothing.\n  if (delta < 0 && Math.abs(range[1] - range[0]) >= Math.abs(fullRange[1] - fullRange[0])) {\n    return bounds;\n  }\n  const t = Math.abs((anchor - range[0]) / (range[1] - range[0]));\n  let r0 = range[0] + sign * delta * 2 * t;\n  let r1 = range[1] - sign * delta * 2 * (1 - t);\n  // If new range is outside of the left border then clamp it.\n  if (Math.sign(r0 - fullRange[0]) !== sign) {\n    r0 = fullRange[0];\n  }\n  // If new range is outside of the right border then clamp it.\n  if (Math.sign(fullRange[1] - r1) !== sign) {\n    r1 = fullRange[1];\n  }\n  // If new range is too small then make it no less than minimal available.\n  if (Math.sign(r1 - r0) !== sign || Math.abs(r1 - r0) < Math.abs(minRangeThreshold)) {\n    if (Math.abs(r0 - range[0]) < Math.abs(minRangeThreshold / 2)) {\n      // Dock it to the start.\n      r0 = range[0];\n      r1 = r0 + minRangeThreshold;\n    } else if (Math.abs(r1 - range[1]) < Math.abs(minRangeThreshold / 2)) {\n      // Dock it to the end.\n      r1 = range[1];\n      r0 = r1 - minRangeThreshold;\n    } else {\n      // Dock it to the anchor.\n      r0 = anchor - minRangeThreshold / 2;\n      r1 = anchor + minRangeThreshold / 2;\n    }\n  }\n  const newBounds: DomainBounds = [scale.invert!(r0), scale.invert!(r1)];\n  return rangesEqual(bounds, newBounds) ? bounds : newBounds;\n};\n\nconst growBandScaleBounds = (\n  scale: ScaleObject, bounds: DomainBounds, delta: number, anchor: number,\n): DomainBounds => {\n  const domain = scale.domain();\n  const fullRange = scale.range();\n  const step = (fullRange[1] - fullRange[0]) / domain.length;\n  const range = scaleBounds(scale, bounds);\n  const range0 = Math.round((range[0] - fullRange[0]) / step);\n  const range1 = range0 + Math.round((range[1] - range[0]) / step) - 1;\n  // Let it be always 1 for now.\n  const rangeStep = Math.sign(delta);\n  if (\n    (rangeStep === 0) ||\n    (rangeStep > 0 && range0 === range1) ||\n    (rangeStep < 0 && range0 === 0 && range1 === domain.length - 1)\n  ) {\n    return bounds;\n  }\n  const t = Math.abs((anchor - range[0]) / (range[1] - range[0]));\n  let new0 = range0 + Math.round(rangeStep * 2 * t);\n  let new1 = range1 - Math.round(rangeStep * 2 * (1 - t));\n  if (new0 < 0) {\n    new0 = 0;\n  }\n  if (new1 > domain.length - 1) {\n    new1 = domain.length - 1;\n  }\n  if (new0 > new1) {\n    if (t <= 0.5) {\n      new1 = new0;\n    } else {\n      new0 = new1;\n    }\n  }\n  if (new0 === range0 && new1 === range1) {\n    return bounds;\n  }\n  return [domain[new0], domain[new1]];\n};\n\nconst invertLinearScaleBounds = (scale: ScaleObject, range: NumberArray): DomainBounds => {\n  const fullRange = scale.range();\n  const match = Math.sign(fullRange[1] - fullRange[0]) === Math.sign(range[1] - range[0]);\n  return [\n    scale.invert!(range[match ? 0 : 1]),\n    scale.invert!(range[match ? 1 : 0]),\n  ];\n};\n\nconst matchPointToBand = (domain: DomainItems, range: NumberArray, p: number) => {\n  const i = Math.floor(domain.length * (p - range[0]) / (range[1] - range[0]));\n  return domain[Math.min(i, domain.length - 1)];\n};\n\nconst invertBandScaleBounds = (scale: ScaleObject, range: NumberArray): DomainBounds => {\n  const domain = scale.domain();\n  const fullRange = scale.range();\n  return [\n    matchPointToBand(domain, fullRange, range[0]),\n    matchPointToBand(domain, fullRange, range[1]),\n  ];\n};\n\n// Though these functions are used only in *Viewport* plugin (and so should be placed right there),\n// they reside here so that internal scale specifics (*getWidth*)\n// are encapsulated in this utility file.\n/** @internal */\nexport const scaleBounds = makeScaleHelper(scaleLinearBounds, scaleBandBounds);\n/** @internal */\nexport const moveBounds = makeScaleHelper(moveLinearScaleBounds, moveBandScaleBounds);\n// \"scaleBounds\" would be a better name but \"scale\" is already occupied.\n/** @internal */\nexport const growBounds = makeScaleHelper(growLinearScaleBounds, growBandScaleBounds);\n/** @internal */\nexport const invertBoundsRange = makeScaleHelper(invertLinearScaleBounds, invertBandScaleBounds);\n","import { extent } from 'd3-array';\nimport {\n  getValueDomainName, scaleLinear, scaleBand, rangesEqual, makeScale,\n} from '../../utils/scale';\nimport { ARGUMENT_DOMAIN, VALUE_DOMAIN } from '../../constants';\nimport {\n  Series, PointList, DomainItems, DomainInfoCache, BuildScalesFn, DomainInfo, DomainOptions,\n  AddDomainFn, MergeDomainsFn, GetItemFn, GetDomainItemsFn,\n  FactoryFn, ExtendDomainsFn, NumberArray,\n} from '../../types';\n\nconst makeDomain = ({ factory, modifyDomain }: DomainOptions): DomainInfo => ({\n  domain: [],\n  factory,\n  isDiscrete: !!(factory && isDiscrete(factory)),\n  modifyDomain,\n});\n\n/** @internal */\nexport const defaultDomains: DomainInfoCache = {\n  [ARGUMENT_DOMAIN]: makeDomain({}),\n  [VALUE_DOMAIN]: makeDomain({}),\n};\n/** @internal */\nexport const addDomain: AddDomainFn = (domains, name, options) => ({\n  ...domains,\n  [name]: makeDomain(options),\n});\n\nconst mergeContinuousDomains: MergeDomainsFn = (domain, items) => {\n  const newDomain = extent([...domain, ...items]);\n  return rangesEqual(newDomain as any, domain as any) ? domain : newDomain;\n};\n\nconst mergeDiscreteDomains: MergeDomainsFn = (domain, items) => {\n  const newDomain = Array.from(new Set([...domain, ...items]));\n  return newDomain.length === domain.length ? domain : newDomain;\n};\n\nconst getArgument: GetItemFn = point => point.argument;\nconst getValue: GetItemFn = point => point.value;\n\nconst guessFactory = (points: PointList, getItem: GetItemFn) => (\n  points.length && typeof getItem(points[0]) === 'string' ? scaleBand : scaleLinear\n);\n\nconst isDiscrete = (factory: FactoryFn) => 'bandwidth' in factory();\n\nconst updateDomainFactory = (domain: DomainInfo, series: Series, getItem: GetItemFn) => {\n  if (domain.factory) {\n    return domain;\n  }\n  const factory = guessFactory(series.points, getItem);\n  return {\n    ...domain,\n    factory,\n    isDiscrete: isDiscrete(factory),\n  };\n};\n\n/** @internal */\nexport const updateDomainItems = (domain: DomainInfo, items: DomainItems): DomainInfo => {\n  const merge = domain.isDiscrete ? mergeDiscreteDomains : mergeContinuousDomains;\n  const merged = merge(domain.domain, items);\n  return merged === domain.domain ? domain : {\n    ...domain,\n    domain: domain.modifyDomain ? domain.modifyDomain(merged) : merged,\n  };\n};\n\nconst getArgumentDomainItems: GetDomainItemsFn = series => series.points.map(getArgument);\n\nconst getValueDomainItems: GetDomainItemsFn = (series) => {\n  const items = series.points.map(getValue);\n  return series.getPointTransformer.isStartedFromZero ? [0, ...items] : items;\n};\n\nconst updateDomain = (\n  domain: DomainInfo, series: Series, getItem: GetItemFn, getDomainItems: GetDomainItemsFn,\n) => updateDomainItems(updateDomainFactory(domain, series, getItem), getDomainItems(series));\n\n/** @internal */\nexport const extendDomains: ExtendDomainsFn = (domains, series) => {\n  const argumentDomain = updateDomain(\n    domains[ARGUMENT_DOMAIN], series, getArgument, getArgumentDomainItems);\n  const valueDomainName = getValueDomainName(series.scaleName);\n  const valueDomain = updateDomain(\n    domains[valueDomainName], series, getValue, getValueDomainItems);\n  const changes = {};\n  if (argumentDomain !== domains[ARGUMENT_DOMAIN]) {\n    changes[ARGUMENT_DOMAIN] = argumentDomain;\n  }\n  if (valueDomain !== domains[valueDomainName]) {\n    changes[valueDomainName] = valueDomain;\n  }\n  return Object.keys(changes).length ? { ...domains, ...changes } : domains;\n};\n\n/** @internal */\nexport const buildScales: BuildScalesFn = (domains, ranges) => {\n  const scales = {};\n  Object.keys(domains).forEach((name) => {\n    scales[name] = makeScale(\n      domains[name],\n      ranges[name === ARGUMENT_DOMAIN ? ARGUMENT_DOMAIN : VALUE_DOMAIN] as NumberArray,\n    );\n  });\n  return scales;\n};\n","import { Size } from '@devexpress/dx-react-core';\nimport {\n  ARGUMENT_DOMAIN, VALUE_DOMAIN,\n} from '../../constants';\nimport {\n  BBoxes, BBoxesChange, RangesCache, NumberArray,\n} from '../../types';\n\nconst isEqual = (\n  { width: firstWidth, height: firstHeight }: Size,\n  { width: secondWidth, height: secondHeight }: Size,\n) => firstWidth === secondWidth && firstHeight === secondHeight;\n\n/** @internal */\nexport const bBoxes = (prevBBoxes: BBoxes, { bBox, placeholder }: BBoxesChange) => {\n  if (isEqual(prevBBoxes[placeholder] || {}, bBox)) return prevBBoxes;\n  return { ...prevBBoxes, [placeholder]: bBox };\n};\n\n/** @internal */\nexport const getRanges = (paneSize: Size, rotated: boolean): RangesCache => {\n  const horRange: NumberArray = [0, paneSize.width];\n  const verRange: NumberArray = [paneSize.height, 0];\n  return {\n    [ARGUMENT_DOMAIN]: rotated ? verRange : horRange,\n    [VALUE_DOMAIN]: rotated ? horRange : verRange,\n  };\n};\n","import { isHorizontal } from '../../utils/scale';\nimport {\n  LEFT, RIGHT, TOP, BOTTOM, MIDDLE, END, START,\n} from '../../constants';\nimport {\n  ScaleObject, GetFormatFn, ProcessTickFn, TickFormatFn, NumberArray, GetTickCoordinatesFn,\n  TickCoordinatesGetterFn, Tick, Grid,\n} from '../../types';\n\nconst getTicks = (scale: ScaleObject, count: number) => (\n  scale.ticks ? scale.ticks(count) : scale.domain()\n);\n\nconst createTicks = <T>(\n  scale: ScaleObject, count: number, callback: ProcessTickFn<T>,\n): ReadonlyArray<T> => (\n  getTicks(scale, count)\n    .map((tick, index) => callback(scale(tick), String(index), tick))\n);\n\nconst getFormat = (scale: ScaleObject, count: number, tickFormat?: TickFormatFn): GetFormatFn => {\n  if (scale.tickFormat) {\n    return tickFormat ? tickFormat(scale, count) : scale.tickFormat(count);\n  }\n  return tick => tick;\n};\n\nconst rotatedPositions = {\n  [LEFT]: BOTTOM,\n  [RIGHT]: TOP,\n  [BOTTOM]: LEFT,\n  [TOP]: RIGHT,\n};\n\nconst positionFlags = {\n  [LEFT]: false,\n  [RIGHT]: false,\n  [BOTTOM]: true,\n  [TOP]: true,\n};\n\n/** @internal */\nexport const getRotatedPosition = (position: string) => rotatedPositions[position];\n\n/** @internal */\nexport const isValidPosition = (position: string, scaleName: string, rotated: boolean) =>\n  positionFlags[position] === isHorizontal(scaleName, rotated);\n\nconst createHorizontalOptions = (position: string, tickSize: number, indentFromAxis: number) => {\n  // Make *position* orientation agnostic - should be START or END.\n  const isStart = position === BOTTOM;\n  return {\n    y1: 0,\n    y2: isStart ? +tickSize : -tickSize,\n    yText: isStart ? +indentFromAxis : -indentFromAxis,\n    dy: isStart ? '1em' : '0em',\n    textAnchor: MIDDLE,\n  };\n};\n\nconst createVerticalOptions = (position: string, tickSize: number, indentFromAxis: number) => {\n  // Make *position* orientation agnostic - should be START or END.\n  const isStart = position === LEFT;\n  return {\n    x1: 0,\n    x2: isStart ? -tickSize : +tickSize,\n    xText: isStart ? -indentFromAxis : +indentFromAxis,\n    dy: '0.3em',\n    textAnchor: isStart ? END : START,\n  };\n};\n\n// Constant is selected to preserve original behavior described in\n// https://github.com/d3/d3-scale#continuous_ticks.\nconst DEFAULT_TICK_COUNT = 10;\nconst getTickCount = (scaleRange: NumberArray, paneSize: number) => {\n  const rangeToPaneRatio = Math.abs(scaleRange[0] - scaleRange[1]) / paneSize;\n  return Math.round(DEFAULT_TICK_COUNT * (isFinite(rangeToPaneRatio) ? rangeToPaneRatio : 1));\n};\n\nconst createTickFilter = (isHor: boolean, size: number) => (\n  isHor\n    ? (tick: any) => tick.x1 >= 0 && tick.x1 <= size\n    : (tick: any) => tick.y1 >= 0 && tick.y1 <= size\n);\n\n/** @internal */\nexport const tickCoordinatesGetter: TickCoordinatesGetterFn<Tick> = ({\n  isHor, scale, tickCount, tickFormat, position, tickSize, indentFromAxis,\n}) => {\n  const formatTick = getFormat(scale!, tickCount!, tickFormat);\n  const options = (isHor ? createHorizontalOptions : createVerticalOptions)(\n    position!, tickSize!, indentFromAxis!,\n  );\n  return (coordinates, key, tick) => ({\n    key,\n    x1: coordinates,\n    x2: coordinates,\n    y1: coordinates,\n    y2: coordinates,\n    xText: coordinates,\n    yText: coordinates,\n    text: formatTick(tick),\n    ...options,\n  });\n};\n\n/** @internal */\nexport const gridCoordinatesGetter: TickCoordinatesGetterFn<Grid> = ({ isHor }) => {\n  const options = isHor ? { y1: 0 } : { x1: 0 };\n  return (coordinates, key) => ({\n    key,\n    x1: coordinates,\n    y1: coordinates,\n    ...options,\n  });\n};\n\n/** @internal */\nexport const getTickCoordinates: GetTickCoordinatesFn<Tick | Grid> = ({\n  scaleName, scale, paneSize, rotated, callback, ...restProps\n}) => {\n  const isHor = isHorizontal(scaleName, rotated);\n  const tickCount = getTickCount(scale.range(), paneSize[1 - Number(isHor)]);\n  const ticks = createTicks(scale, tickCount, callback({ isHor, scale, tickCount, ...restProps }));\n  const visibleTicks = ticks.filter(createTickFilter(isHor, paneSize[1 - Number(isHor)]));\n  return {\n    ticks: visibleTicks,\n    sides: [Number(isHor), Number(!isHor)],\n  };\n};\n","import {\n  symbol,\n  symbolCircle,\n  line,\n  curveMonotoneX,\n  curveMonotoneY,\n  area,\n  arc,\n  pie,\n} from 'd3-shape';\nimport {\n  SeriesList, Series, PointList, Point, DataItems, AddSeriesFn, ScalesCache, ScaleSeriesPointsFn,\n  GetPointTransformerFn, Colors, Rect,\n  BarSeries, ScatterSeries, PieSeries,\n  PointComponentProps, PathFn, PathStartCoordinates, PathEndCoordinates, Scales,\n} from '../../types';\nimport { Size } from '@devexpress/dx-react-core';\nimport { ARGUMENT_DOMAIN } from '../../constants';\nimport { getValueDomainName, getWidth, rangesEqual } from '../../utils/scale';\n\nconst getArg = ({ arg }: PointComponentProps) => arg;\nconst getVal = ({ val }: PointComponentProps) => val;\nconst getStartVal = ({ startVal }: PointComponentProps) => startVal!;\n\n/** @internal */\nexport const dArea: PathFn = area<PointComponentProps>()\n  .x(getArg)\n  .y1(getVal)\n  .y0(getStartVal) as any;\n\n/** @internal */\nexport const dRotateArea: PathFn = area<PointComponentProps>()\n  .x1(getStartVal)\n  .x0(getVal)\n  .y(getArg) as any;\n\n/** @internal */\nexport const dLine: PathFn = line<PointComponentProps>()\n  .x(getArg)\n  .y(getVal) as any;\n\n/** @internal */\nexport const dRotateLine = line<PointComponentProps>()\n  .x(getVal)\n  .y(getArg) as any;\n\n/** @internal */\nexport const dSpline: PathFn = line<PointComponentProps>()\n  .x(getArg)\n  .y(getVal)\n  .curve(curveMonotoneX) as any;\n\n/** @internal */\nexport const dRotateSpline: PathFn = line<PointComponentProps>()\n  .x(getVal)\n  .y(getArg)\n  .curve(curveMonotoneY) as any;\n\n/** @internal */\nexport const dBar = (\n  arg: number, val: number, startVal: number, width: number, rotated: boolean,\n) => {\n  const height = Math.abs(val - startVal!);\n  const minVal = Math.min(val, startVal!);\n  return {\n    x: rotated ? minVal : arg - width / 2,\n    y: rotated ? arg - width / 2 : minVal,\n    width: rotated ? height : width || 2,\n    height: rotated ? width || 2 : height,\n  };\n};\n\n/** @internal */\nexport const getPiePointTransformer: GetPointTransformerFn = ({\n  argumentScale, valueScale, points,\n}) => {\n  const x = Math.max(...argumentScale.range()) / 2;\n  const y = Math.max(...valueScale.range()) / 2;\n  const maxRadius = Math.min(x, y);\n  const pieData = pie<Point>().sort(null).value(d => d.value)(points as Point[]);\n  return (point) => {\n    const { startAngle, endAngle } = pieData[point.index];\n    return {\n      ...point,\n      arg: x,\n      val: y,\n      startAngle,\n      endAngle,\n      maxRadius,\n    };\n  };\n};\n\n/** @internal */\nexport const getLinePointTransformer: GetPointTransformerFn = ({\n  argumentScale, valueScale,\n}) => point => ({\n  ...point,\n  arg: argumentScale(point.argument),\n  val: valueScale(point.value),\n} as any);\n\n// Though transformations for line and scatter are the same,\n// separate function instance is required as it contains additional static fields.\n/** @internal */\nexport const getScatterPointTransformer: GetPointTransformerFn = (\n  ...args\n) => getLinePointTransformer(...args);\n\n/** @internal */\nexport const getAreaPointTransformer: GetPointTransformerFn = (series) => {\n  const transform = getLinePointTransformer(series);\n  const startVal = series.valueScale(0);\n  return (point) => {\n    const ret = transform(point);\n    return {\n      ...ret,\n      startVal,\n    };\n  };\n};\n// Used for domain calculation and stacking.\ngetAreaPointTransformer.isStartedFromZero = true;\n\n/** @internal */\nexport const getBarPointTransformer: GetPointTransformerFn = ({\n  argumentScale, valueScale,\n}) => {\n  const startVal = valueScale(0);\n  return point => ({\n    ...point,\n    arg: argumentScale(point.argument),\n    val: valueScale(point.value),\n    startVal,\n    maxBarWidth: getWidth(argumentScale),\n  } as any);\n};\n// Used for domain calculation and stacking.\ngetBarPointTransformer.isStartedFromZero = true;\n// Used for Bar grouping.\ngetBarPointTransformer.isBroad = true;\n\ngetPiePointTransformer.getPointColor = (palette, index) => palette[index % palette.length];\n\n/** @internal */\nexport const findSeriesByName = (\n  name: symbol, series: SeriesList,\n): Series => series.find(seriesItem => seriesItem.symbolName === name) as Series;\n\n/** @internal */\nexport const dSymbol = (\n  { size }: ScatterSeries.PointOptions,\n) => symbol().size(size ** 2).type(symbolCircle)()!;\n\n/** @internal */\nexport const dPie = (\n  maxRadius: number, innerRadius: number, outerRadius: number, startAngle: number, endAngle: number,\n) => arc()({\n  startAngle,\n  endAngle,\n  innerRadius: innerRadius * maxRadius,\n  outerRadius: outerRadius * maxRadius,\n})!;\n\nconst getRect = (\n  cArg: number, cVal: number, dArg: number, dVal: number, rotated: boolean,\n): Rect => {\n  const minArg = cArg - dArg;\n  const minVal = cVal - dVal;\n  const maxArg = cArg + dArg;\n  const maxVal = cVal + dVal;\n  return rotated ? [minVal, minArg, maxVal, maxArg] : [minArg, minVal, maxArg, maxVal];\n};\n\ngetBarPointTransformer.getTargetElement = (point) => {\n  const {\n    arg, val, startVal, barWidth, maxBarWidth, rotated,\n  } = point as BarSeries.PointProps;\n  const halfWidth = barWidth * maxBarWidth / 2;\n  const halfHeight = Math.abs(startVal! - val) / 2;\n  const centerVal = (val + startVal!) / 2;\n  return getRect(arg, centerVal, halfWidth, halfHeight, rotated);\n};\n\ngetPiePointTransformer.getTargetElement = (point) => {\n  const {\n    arg: x, val: y, innerRadius, outerRadius, maxRadius, startAngle, endAngle,\n  } = point as PieSeries.PointProps;\n  const center = arc().centroid({\n    startAngle,\n    endAngle,\n    innerRadius: innerRadius * maxRadius,\n    outerRadius: outerRadius * maxRadius,\n  });\n  const cx = center[0] + x;\n  const cy = center[1] + y;\n  return getRect(cx, cy, 0.5, 0.5, false);\n};\n\ngetAreaPointTransformer.getTargetElement = ({ arg, val, rotated }) => (\n  getRect(arg, val, 1, 1, rotated)\n);\n\ngetLinePointTransformer.getTargetElement = getAreaPointTransformer.getTargetElement;\n\ngetScatterPointTransformer.getTargetElement = (obj) => {\n  const { arg, val, point, rotated } = obj as ScatterSeries.PointProps;\n  const t = point.size / 2;\n  return getRect(arg, val, t, t, rotated);\n};\n\nconst getUniqueName = (list: SeriesList, name: string) => {\n  const names = new Set(list.map(item => item.name));\n  let ret = name;\n  while (names.has(ret)) {\n    // @ts-ignore\n    ret = ret.replace(/\\d*$/, str => (str ? +str + 1 : 0));\n  }\n  return ret;\n};\n\n// TODO: Memoization is much needed here.\n// Though \"series\" list never persists, single \"series\" item most often does.\nconst createPoints = (\n  {\n    argumentField, valueField, getPointTransformer,\n  }: Series,\n  data: DataItems, props: any, palette: Colors,\n): PointList => {\n  const points: Point[] = [];\n  data.forEach((dataItem, index) => {\n    const argument = dataItem[argumentField];\n    const value = dataItem[valueField];\n    if (argument !== undefined && value !== undefined) {\n      points.push({\n        argument,\n        value,\n        index,\n        ...props,\n        color: getPointTransformer.getPointColor\n          ? getPointTransformer.getPointColor(palette, index) : props.color,\n      });\n    }\n  });\n  return points;\n};\n\n/** @internal */\nexport const addSeries: AddSeriesFn = (\n  series, data, palette, props, restProps,\n) => {\n  // It is used to generate unique series dependent attribute names for patterns.\n  // *symbolName* cannot be used as it cannot be part of DOM attribute name.\n  const index = series.length;\n  const seriesColor = props.color || palette[index % palette.length];\n  return [...series, {\n    ...props,\n    index,\n    name: getUniqueName(series, props.name),\n    points: createPoints(props, data, { ...restProps, color: seriesColor }, palette),\n    color: seriesColor,\n  }];\n};\n\n// TODO: Memoization is much needed here by the same reason as in \"createPoints\".\n// Make \"scales\" persistent first.\nconst scalePoints = (series: Series, scales: ScalesCache, rotated: boolean) => {\n  const transform = series.getPointTransformer({\n    ...series,\n    argumentScale: scales[ARGUMENT_DOMAIN],\n    valueScale: scales[getValueDomainName(series.scaleName)],\n  });\n  const ret: Series = {\n    ...series,\n    rotated,\n    points: series.points.map(point => ({\n      ...transform(point),\n      rotated,\n    })),\n  };\n  return ret;\n};\n\n/** @internal */\nexport const scaleSeriesPoints: ScaleSeriesPointsFn = (\n  series, scales, rotated,\n) => series.map(seriesItem => scalePoints(seriesItem, scales, rotated));\n\n/** @internal */\nexport const getVisibility = (\n  pane: Size, centerX: number, centerY: number, width: number, height: number,\n) => {\n  return (centerX - width / 2 < 0 && centerX + width / 2 < 0)\n  || (centerX - width / 2 > pane.width && centerX + width / 2 > pane.width)\n  || (centerY - height / 2 < 0 && centerY + height / 2 < 0)\n  || (centerY - height / 2 > pane.height && centerY + height / 2 > pane.height) ?\n  'hidden' : 'visible';\n};\n\n/** @internal */\nexport const adjustBarSize = (\n  bar: { width: number, height: number, x: number, y: number }, { width, height }: Size,\n) => {\n  const x = Math.max(0, bar.x);\n  const y = Math.max(0, bar.y);\n  return {\n    x,\n    y,\n    width: Math.min(width, bar.x + bar.width) - x,\n    height: Math.min(height, bar.y + bar.height) - y,\n  };\n};\n\n/** @internal */\nexport const isValuesChanged = (previous: any, current: any): boolean => {\n  return Object.entries(previous).some(el => el[1] !== current[el[0]]);\n};\n\n/** @internal */\nexport const isCoordinatesChanged = (\n  { coordinates: prevCoordinates }: PathStartCoordinates, { coordinates }: PathEndCoordinates,\n) => {\n  if (prevCoordinates.length !== coordinates.length) {\n    return true;\n  }\n  return prevCoordinates.some((el, index) => {\n    return el.arg !== coordinates[index].arg || el.val !== coordinates[index].val;\n  });\n};\n\n/** @internal */\nexport const isScalesChanged = (previous: Scales, current: Scales): boolean => {\n  return !rangesEqual(previous.argScale.range(), current.argScale.range()) ||\n  !rangesEqual(previous.valScale.range(), current.valScale.range());\n};\n","import { stack } from 'd3-shape';\nimport { scaleBand } from 'd3-scale';\nimport {\n  SeriesList, Series, Point, GetPointTransformerFn, DataItems, DomainInfoCache,\n  StackList, GetPointTransformerFnRaw, BarSeries, StackedPoint, StackMap, GetStackedSeriesFn,\n  SeriesPositions, StacksKeys, StackedDataItems, OffsetFn, OrderFn,\n  StackedData, GetStackedDomainsFn,\n} from '../../types';\nimport { extendDomains, updateDomainItems } from '../scale/computeds';\nimport { getValueDomainName } from '../../utils/scale';\n\n// \"Stack\" plugin relies on \"data\" and \"series\" getters and\n// knowledge about \"getPointTransformer\" and \"path\" functions behavior.\nconst buildSeriesToStackMap = (stacks: StackList): StackMap => {\n  const result = {};\n  stacks.forEach(({ series }, i) => {\n    series.forEach((name) => {\n      result[name] = i;\n    });\n  });\n  return result;\n};\n\nconst getStackedPointTransformer = (getPointTransformer: GetPointTransformerFn) => {\n  const wrapper: GetPointTransformerFnRaw = (series) => {\n    const transform = getPointTransformer(series);\n    const { valueScale } = series;\n    return (point: Point) => {\n      const ret = transform(point);\n      return {\n        ...ret,\n        startVal: valueScale((point as StackedPoint).value0),\n      };\n    };\n  };\n  // Preserve static fields of original transformer.\n  Object.assign(wrapper, getPointTransformer);\n  return wrapper as GetPointTransformerFn;\n};\n\nconst collectStacks = (\n  seriesList: SeriesList, seriesToStackMap: StackMap,\n  stacksKeys: StacksKeys, seriesPositions: SeriesPositions,\n) => {\n  seriesList.forEach(({ name, valueField }) => {\n    const stackId = seriesToStackMap[name];\n    if (stackId === undefined) {\n      return;\n    }\n\n    if (!stacksKeys[stackId]) {\n      stacksKeys[stackId] = [];\n    }\n    seriesPositions[name] = stacksKeys[stackId].length;\n    stacksKeys[stackId].push(valueField);\n  });\n  // Stack cannot consist of single series.\n  Object.keys(stacksKeys).forEach((stackId) => {\n    if (stacksKeys[stackId].length === 1) {\n      delete stacksKeys[stackId];\n    }\n  });\n};\n\nconst getStackedData = (\n  stacksKeys: StacksKeys, dataItems: DataItems, offset: OffsetFn, order: OrderFn,\n): StackedData => {\n  const result = {};\n  Object.keys(stacksKeys).forEach((stackId) => {\n    result[stackId] = stack().keys(stacksKeys[stackId])\n      .order(order as any)\n      .offset(offset as any)(dataItems as any);\n  });\n  return result;\n};\n\nconst buildStackedSeries = (series: Series, dataItems: StackedDataItems): Series => {\n  const points = series.points.map((point) => {\n    const [value0, value] = dataItems[point.index];\n    return { ...point, value, value0 };\n  });\n  const stackedSeries = {\n    ...series,\n    points,\n    isStacked: true,\n  };\n  if (series.getPointTransformer.isStartedFromZero) {\n    stackedSeries.getPointTransformer = getStackedPointTransformer(series.getPointTransformer);\n  }\n  return stackedSeries;\n};\n\nconst applyStacking = (\n  seriesList: SeriesList, dataItems: DataItems, seriesToStackMap: StackMap,\n  offset: OffsetFn, order: OrderFn,\n): SeriesList => {\n  const stacksKeys: StacksKeys = {};\n  const seriesPositions: SeriesPositions = {};\n  collectStacks(seriesList, seriesToStackMap, stacksKeys, seriesPositions);\n  if (Object.keys(stacksKeys).length === 0) {\n    return seriesList;\n  }\n  const stackedData = getStackedData(stacksKeys, dataItems, offset, order);\n  return seriesList.map((seriesItem) => {\n    const stackId = seriesToStackMap[seriesItem.name];\n    const stackData = stackedData[stackId];\n    if (!stackData) {\n      return seriesItem;\n    }\n    const position = seriesPositions[seriesItem.name];\n    return buildStackedSeries(seriesItem, stackData[position]);\n  });\n};\n\nconst getGroupName = (series: Series, i: number, seriesToStackMap: StackMap) => {\n  const stackId = seriesToStackMap[series.name];\n  return stackId >= 0 ? String(stackId) : `group-${i}`;\n};\n\nconst getGroupedPointTransformer = (\n  getPointTransformer: GetPointTransformerFn, groupCount: number, groupOffset: number,\n) => {\n  const wrapper: GetPointTransformerFnRaw = (series) => {\n    const transform = getPointTransformer(series);\n    const widthCoeff = 1 / groupCount;\n    return (point) => {\n      const original = transform(point) as BarSeries.PointProps;\n      const arg = (\n        original.arg - original.maxBarWidth * (0.5 - 0.5 * widthCoeff - groupOffset * widthCoeff)\n      );\n      const result: BarSeries.PointProps = {\n        ...original,\n        arg,\n        maxBarWidth: original.maxBarWidth / groupCount,\n      };\n      return result;\n    };\n  };\n  // Preserve static fields of original transformer.\n  Object.assign(wrapper, getPointTransformer);\n  return wrapper as GetPointTransformerFn;\n};\n\nconst applyGrouping = (seriesList: SeriesList, seriesToStackMap: StackMap): SeriesList => {\n  const groups = new Set<string>();\n  seriesList.forEach((seriesItem, i) => {\n    if (seriesItem.getPointTransformer.isBroad) {\n      groups.add(getGroupName(seriesItem, i, seriesToStackMap));\n    }\n  });\n  // There cannot be single group.\n  if (groups.size < 2) {\n    return seriesList;\n  }\n  const scale = scaleBand().domain(Array.from(groups)).range([0, groups.size]);\n  return seriesList.map((seriesItem, i) => {\n    if (!seriesItem.getPointTransformer.isBroad) {\n      return seriesItem;\n    }\n    const getPointTransformer = getGroupedPointTransformer(\n      seriesItem.getPointTransformer,\n      groups.size,\n      scale(getGroupName(seriesItem, i, seriesToStackMap))!,\n    );\n    return {\n      ...seriesItem,\n      getPointTransformer,\n    };\n  });\n};\n\n/** @internal */\nexport const getStackedSeries: GetStackedSeriesFn = (\n  seriesList, dataItems, { stacks, offset, order },\n) => {\n  const map = buildSeriesToStackMap(stacks);\n  const stackedSeriesList = applyStacking(seriesList, dataItems, map, offset, order);\n  const groupedSeriesList = applyGrouping(stackedSeriesList, map);\n  return groupedSeriesList;\n};\n\nconst resetDomainItems = (domains: DomainInfoCache): DomainInfoCache => {\n  const result = {};\n  Object.keys(domains).forEach((key) => {\n    result[key] = { ...domains[key], domain: [] };\n  });\n  return result;\n};\n\nconst extendDomainsWithAdditionalItems = (domains: DomainInfoCache, series: Series) => {\n  const items = series.points.map(point => (point as StackedPoint).value0);\n  const key = getValueDomainName(series.scaleName);\n  const domain = updateDomainItems(domains[key], items);\n  return domain !== domains[key] ? { ...domains, [key]: domain } : domains;\n};\n\n// Stacking changes data - so computed domains have to be discarded\n// and recalculated from the new stacked data.\n/** @internal */\nexport const getStackedDomains: GetStackedDomainsFn = (domains, seriesList) => {\n  const stackedSeries = seriesList.filter(series => (series as any).isStacked);\n  if (!stackedSeries.length) {\n    return domains;\n  }\n  // Recalculate domains in a common way.\n  const rebuiltDomains = seriesList.reduce(extendDomains, resetDomainItems(domains));\n  // Take additional \"value0\" fields into account.\n  return stackedSeries.reduce(extendDomainsWithAdditionalItems, rebuiltDomains);\n};\n","import {\n  Scales, PointComponentProps, PieSeries, PathComponentProps, GetDelayFn,\n} from '../../types';\n\n/** @internal */\nexport const easeOutCubic = (t: number) => (t - 1) * (t - 1) * (t - 1) + 1;\n\n/** @internal */\nexport const getDelay: GetDelayFn = (index, isStart) => isStart ? index * 30 : 0;\n\n/** @internal */\nexport const getStartVal = (scales: Scales) => {\n  return scales.valScale.copy().clamp!(true)(0);\n};\n\n/** @internal */\nexport const getPathStart = (scales: Scales, { coordinates }: PathComponentProps) => {\n  const start = getStartVal(scales);\n  return { coordinates: coordinates.map(coord =>\n    ({ arg: coord.arg, val: start, startVal: start })) };\n};\n\n/** @internal */\nexport const getPointStart = (scales: Scales, { arg }: PointComponentProps) => {\n  const start = getStartVal(scales);\n  return { arg, val: start, startVal: start };\n};\n\n/** @internal */\nexport const getPieStart = (scales: Scales, { startAngle, endAngle }: PieSeries.PointProps) =>\n({ innerRadius: 0, outerRadius: 0, startAngle, endAngle });\n","import { SeriesRef, TargetList, NotifyPointerMoveFn, ProcessedTarget } from '../types';\n\n// Comparing by reference is not an option as Tracker always sends new objects.\n// Tracker cannot persist references as it actually operates with simple scalars\n// and constructs objects to provide info in a slightly more suitable way.\nconst compareTargets = (target1: SeriesRef, target2: SeriesRef) => (\n  target1.series === target2.series && target1.point === target2.point\n);\n\n// If *currentTarget* is among *targets* then it has priority but only while its distance\n// is not significantly greater (DISTANCE_PRIORITY_RATIO) than that of the best candidate.\nconst selectTarget = (targets: TargetList, currentTarget: SeriesRef): ProcessedTarget => {\n  const candidate = targets[0];\n  if (!currentTarget) {\n    return candidate;\n  }\n  if (!candidate) {\n    return null;\n  }\n  return compareTargets(candidate, currentTarget) ? undefined : candidate;\n};\n\n/** @internal */\nexport const processPointerMove = (\n  targets: TargetList, currentTarget: SeriesRef, notify?: NotifyPointerMoveFn,\n) => {\n  const nextTarget = selectTarget(targets, currentTarget);\n  if (nextTarget === undefined) {\n    return undefined;\n  }\n  if (notify) {\n    notify(nextTarget);\n  }\n  return nextTarget;\n};\n","import { NumberArray, Location } from '../types';\n// This function is to be called from context where DOM is available -\n// so *window* can be accessed safely.\n/** @internal */\nexport const getOffset = (element: Element): NumberArray => {\n  const { left, top } = element.getBoundingClientRect();\n  // Safer way to get window.\n  const { defaultView } = element.ownerDocument!;\n  const { pageXOffset, pageYOffset } = defaultView!;\n  return [left + pageXOffset, top + pageYOffset];\n};\n\n/** @internal */\nexport const getEventCoords = (e: any, offset: NumberArray): Location => {\n  const { pageX, pageY } = e.touches ? e.touches[0] : e;\n  return [pageX - offset[0], pageY - offset[1]];\n};\n","import { processPointerMove } from '../../utils/hover-state';\nimport { getOffset } from '../../utils/common';\nimport {\n  SeriesList, SeriesRef, TransformedPoint, TargetList, NotifyPointerMoveFn,\n  TooltipParameters, TooltipReference, Rect,\n} from '../../types';\n\n/** @internal */\nexport const getParameters = (series: SeriesList, target: SeriesRef): TooltipParameters => {\n  const currentSeries = series.find(({ name }) => target.series === name)!;\n  const item = currentSeries.points.find(point => point.index === target.point) as TransformedPoint;\n  return {\n    element: currentSeries.getPointTransformer.getTargetElement(item),\n    text: `${item.value}`,\n  };\n};\n\n/** @internal */\nexport const createReference = (\n  rect: Rect, rootRef: React.RefObject<Element>,\n): TooltipReference => ({\n  // These two fields together with *width* and *height* are left with stub data for\n  // simplicity reasons - they seem to be unused by *Popper*.\n  clientWidth: 0,\n  clientHeight: 0,\n  getBoundingClientRect() {\n    // This function is expected to be called (by the *Popper*) when DOM is ready -\n    // so *rootRef.current* can be accessed.\n    const offset = getOffset(rootRef.current!);\n    // *getBoundingClientRect* of a real html element is affected by window scrolling.\n    // *popper.js* subscribes \"html -> getBoundingClientRect -> (left, top)\" from\n    // \"reference -> getBoundingClientRect\" - so here it is added.\n    const htmlRect = rootRef.current!.ownerDocument!.documentElement.getBoundingClientRect();\n    const left = rect[0] + offset[0] + htmlRect.left;\n    const right = rect[2] + offset[0] + htmlRect.left;\n    const top = rect[1] + offset[1] + htmlRect.top;\n    const bottom = rect[3] + offset[1] + htmlRect.top;\n    return {\n      left,\n      top,\n      right,\n      bottom,\n      width: right - left,\n      height: bottom - top,\n    };\n  },\n});\n\n/** @internal */\nexport const processHandleTooltip = (\n  targets: TargetList, currentTarget: SeriesRef, onTargetItemChange?: NotifyPointerMoveFn,\n) => {\n  const filterTargets = targets.filter(target => target.point !== undefined);\n  return processPointerMove(filterTargets, currentTarget, onTargetItemChange);\n};\n","import {\n  ARGUMENT_DOMAIN, VALUE_DOMAIN,\n} from '../../constants';\nimport {\n  getValueDomainName, makeScale, scaleBounds, rangesEqual,\n  moveBounds, growBounds, invertBoundsRange,\n} from '../../utils/scale';\nimport {\n  NumberArray,\n  Viewport,\n  ScalesCache,\n  DomainInfoCache,\n  RangesCache,\n  DomainInfo,\n  DomainBounds,\n  OnViewportChangeFn,\n  ScaleObject,\n  EventHandlers,\n  Location,\n  Interaction,\n} from '../../types';\nimport { Size } from '@devexpress/dx-react-core';\n\nconst getArgumentBounds = (viewport?: Viewport): DomainBounds | null => (\n  viewport && viewport.argumentStart !== undefined && viewport.argumentEnd !== undefined\n    ? [viewport.argumentStart, viewport.argumentEnd] : null\n);\n\nconst getValueBounds = (viewport?: Viewport): DomainBounds | null => (\n  viewport && viewport.valueStart !== undefined && viewport.valueEnd !== undefined\n    ? [viewport.valueStart, viewport.valueEnd] : null\n);\n\nconst getValueScaleName = (viewport?: Viewport) => (\n  getValueDomainName(viewport && viewport.scaleName)\n);\n\nconst getDefaultBounds = (scale: ScaleObject): DomainBounds => {\n  const domain = scale.domain();\n  return [domain[0], domain[domain.length - 1]];\n};\n\nconst proportionallyExtendRange = (range: NumberArray, subRange: NumberArray): NumberArray => {\n  const p = (subRange[0] - subRange[1]) / (range[0] - range[1]);\n  const q = subRange[0] - p * range[0];\n  return [\n    (range[0] - q) / p,\n    (range[1] - q) / p,\n  ];\n};\n\nconst adjustRange = (domain: DomainInfo, bounds: DomainBounds, range: NumberArray) => {\n  const scale = makeScale(domain, range);\n  const subRange = scaleBounds(scale, bounds);\n  return rangesEqual(subRange, range) ? range : proportionallyExtendRange(range, subRange);\n};\n\nconst update = (\n  ranges: RangesCache, changes: any, key: string, domain: DomainInfo, bounds: DomainBounds,\n) => {\n  const newRange = adjustRange(domain, bounds, ranges[key]);\n  if (newRange !== ranges[key]) {\n    changes[key] = newRange;\n  }\n};\n\n/** @internal */\nexport const adjustLayout = (\n  domains: DomainInfoCache, ranges: RangesCache, viewport?: Viewport,\n) => {\n  const changes = {};\n  const argumentBounds = getArgumentBounds(viewport);\n  if (argumentBounds) {\n    update(ranges, changes, ARGUMENT_DOMAIN, domains[ARGUMENT_DOMAIN], argumentBounds);\n  }\n  const valueBounds = getValueBounds(viewport);\n  if (valueBounds) {\n    update(ranges, changes, VALUE_DOMAIN, domains[getValueScaleName(viewport)], valueBounds);\n  }\n  return Object.keys(changes).length ? { ...ranges, ...changes } : ranges;\n};\n\nconst boundsForScale = (\n  name: string, scales: ScalesCache, currentBounds: DomainBounds | null,\n  interaction: Interaction, type: Interaction, delta: number, anchor: number, range?: NumberArray,\n): DomainBounds | null => {\n  if (!checkInteraction(interaction, type)) {\n    return null;\n  }\n  const scale = scales[name];\n  const bounds = currentBounds || getDefaultBounds(scale);\n  let newBounds: DomainBounds;\n  if (type === 'pan') {\n    newBounds = moveBounds(scale, bounds, delta);\n  } else if (type === 'zoom') {\n    newBounds = range ? invertBoundsRange(scale, range) : growBounds(scale, bounds, delta, anchor);\n  }\n  return newBounds! !== bounds ? newBounds! : null;\n};\n\n/** @internal */\nexport const getViewport = (\n  scales: ScalesCache,\n  rotated: boolean,\n  [argInteraction, valInteraction]: Readonly<[Interaction, Interaction]>, type: Interaction,\n  deltas: Readonly<[number, number]> | null,\n  anchors: Readonly<number[]> | null,\n  ranges: Readonly<[NumberArray, NumberArray]> | null,\n  viewport?: Viewport, onViewportChange?: OnViewportChangeFn,\n) => {\n  const argIndex = Number(rotated);\n  const valIndex = 1 - argIndex;\n  const changes: any = {};\n  const argumentBounds = boundsForScale(\n    ARGUMENT_DOMAIN, scales, getArgumentBounds(viewport),\n    argInteraction, type,\n    deltas ? deltas[argIndex] : 0, anchors ? anchors[argIndex] : 0,\n    ranges ? ranges[argIndex] : undefined,\n  );\n  const valueBounds = boundsForScale(\n    getValueScaleName(viewport), scales, getValueBounds(viewport),\n    valInteraction, type,\n    deltas ? deltas[valIndex] : 0, anchors ? anchors[valIndex] : 0,\n    ranges ? ranges[valIndex] : undefined,\n  );\n  if (argumentBounds) {\n    changes.argumentStart = argumentBounds[0];\n    changes.argumentEnd = argumentBounds[1];\n  }\n  if (valueBounds) {\n    changes.valueStart = valueBounds[0];\n    changes.valueEnd = valueBounds[1];\n  }\n  if (Object.keys(changes).length) {\n    const newViewport = { ...viewport, ...changes };\n    if (onViewportChange) {\n      onViewportChange(newViewport);\n    }\n    return { viewport: newViewport };\n  }\n  return null;\n};\n\n/** @internal */\nexport const getDeltaForTouches = (touches: Touch[]) => {\n  const deltaX = touches[0].pageX - touches[1].pageX;\n  const deltaY = touches[0].pageY - touches[1].pageY;\n  const delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const center: NumberArray = [\n    (touches[0].pageX + touches[1].pageX) / 2,\n    (touches[0].pageY + touches[1].pageY) / 2,\n  ];\n  return { delta, center };\n};\n\n/** @internal */\nexport const isKeyPressed = (event: MouseEvent, key: string) => event[`${key}Key`];\n\n/** @internal */\nexport const getWheelDelta = ({ wheelDelta, deltaY }: { wheelDelta?: number, deltaY?: number }) => {\n  return wheelDelta !== undefined ? wheelDelta : deltaY! * -30; // deltaY for FF\n};\n\n/** @internal */\nexport const isMultiTouch = (e: any) => e.touches && e.touches.length === 2;\n\n/** @internal */\nexport const attachEvents = (node: any, handlers: EventHandlers) => {\n  Object.keys(handlers).forEach((el) => {\n    node.addEventListener(el, handlers[el], { passive: false });\n  });\n};\n\n/** @internal */\nexport const detachEvents = (node: any, handlers: EventHandlers) => {\n  Object.keys(handlers).forEach((el) => {\n    node.removeEventListener(el, handlers[el]);\n  });\n};\n\n/** @internal */\nexport const getRect = (\n  rotated: boolean,\n  interactionWithArguments: Interaction,\n  interactionWithValues: Interaction,\n  initial: Location,\n  current: Location,\n  pane: Size,\n) => {\n  const isZoomArgument = checkInteraction(interactionWithArguments, 'zoom');\n  const isZoomValue = checkInteraction(interactionWithValues, 'zoom');\n  const isXFixed = rotated ? isZoomValue : isZoomArgument;\n  const isYFixed = rotated ? isZoomArgument : isZoomValue;\n  const x = isXFixed ? Math.min(initial[0], current[0]) : 0;\n  const width = isXFixed ? Math.abs(initial[0] - current[0]) : pane.width;\n  const y = isYFixed ? Math.min(initial[1], current[1]) : 0;\n  const height = isYFixed ? Math.abs(initial[1] - current[1]) : pane.height;\n  return {\n    x, y, width, height,\n  };\n};\n\nconst checkInteraction = (interaction: Interaction, type: Interaction) =>\ninteraction === 'both' || interaction === type;\n\n/** @internal */\nexport const setCursorType = (node: any, type?: string) => {\n  const defaultType = 'pointer';\n  node.style.cursor = type ? type : defaultType;\n};\n","import { DIFFERENCE } from '../../constants';\n\n/** @internal */\nexport const isReadyToRenderSeries = (\n  { pane, ...restLayouts }, { current },\n  isPreviousDataEmpty: boolean, axesExist: boolean,\n) => {\n  if (!pane.width && !pane.height) {\n    return false;\n  }\n  const bbox = { width: current.clientWidth, height: current.clientHeight };\n  let width = pane.width;\n  let height = pane.height;\n  Object.entries(restLayouts).forEach((el) => {\n    const orientation = el[0].split('-')[0];\n    if (orientation === 'top' || orientation === 'bottom') {\n      height += el[1].height;\n    } else {\n      width += el[1].width;\n    }\n  });\n  return Math.abs(bbox.width - width) < DIFFERENCE &&\n    Math.abs(bbox.height - height) < DIFFERENCE\n    && isPreviousDataEmptyOrNoAxes(isPreviousDataEmpty, axesExist);\n};\n\nconst isPreviousDataEmptyOrNoAxes = (\n  isPreviousDataEmpty: boolean, axesExist: boolean,\n) => !isPreviousDataEmpty || !axesExist;\n","import { area } from 'd3-shape';\nimport {\n  dArea, dRotateArea, dLine, dRotateLine, dSpline, dRotateSpline,\n} from '../plugins/series/computeds';\nimport {\n  SeriesList, TransformedPoint, PointList, TargetList, PointDistance, Location,\n  CreateHitTesterFn, MakePathFn, IsPointInPathFn,\n  HitTestPointFn, Filter,\n  BarSeries, ScatterSeries, PieSeries,\n  PathFn,\n} from '../types';\n\nconst getSegmentLength = (dx: number, dy: number) => Math.sqrt(dx * dx + dy * dy);\n\n// *distance* is a normalized distance to point.\n// It belongs to [0, Infinity):\n//  = 0 - at point center\n//  = 1 - at point border\n//  > 1 - outside point\n\n// This function is called from event handlers (when DOM is available) -\n// *window.document* can be accessed safely.\nconst createContext = () => document.createElement('canvas').getContext('2d')!;\n\n// For a start using browser canvas will suffice.\n// However a better and more clean solution should be found.\n// Can't d3 perform hit testing?\nconst createCanvasAbusingHitTester = (\n  makePath: MakePathFn, points: PointList, rotated: boolean,\n): IsPointInPathFn => {\n  const ctx = createContext();\n  const path = makePath(rotated);\n  path.context(ctx);\n  path(points as any);\n  return ([x, y]) => ctx.isPointInPath(x, y);\n};\n\nconst LINE_POINT_SIZE = 20;\nconst LINE_TOLERANCE = 10;\n\nconst getDistance = (\n  [px, py]: Location, { arg, val }: TransformedPoint, rotated: boolean,\n) => {\n  const x = rotated ? val : arg;\n  const y = rotated ? arg : val;\n  return getSegmentLength(px - x, py - y);\n};\n\nconst createContinuousSeriesHitTesterCreator =\n  (makePath: MakePathFn): CreateHitTesterFn => (points, rotated) => {\n    const fallbackHitTest = createCanvasAbusingHitTester(makePath, points, rotated);\n    return (target) => {\n      let minDistance = Number.MAX_VALUE;\n      let minIndex: number = 0;\n      const list: PointDistance[] = [];\n      points.forEach((point, i) => {\n        const distance = getDistance(target, point as TransformedPoint, rotated);\n        if (distance <= LINE_POINT_SIZE) {\n          list.push({ distance, index: point.index });\n        }\n        if (distance < minDistance) {\n          minDistance = distance;\n          minIndex = i;\n        }\n      });\n      // This is special case for continuous series - if no point is actually hit\n      // then the closest point to the pointer position is picked.\n      if (!list.length && fallbackHitTest(target)) {\n        list.push({ index: points[minIndex].index, distance: minDistance });\n      }\n      return list.length ? { points: list } : null;\n    };\n  };\n\nconst createPointsEnumeratingHitTesterCreator =\n  (hitTestPoint: HitTestPointFn): CreateHitTesterFn => (points, rotated) => (target) => {\n    const list: PointDistance[] = [];\n    points.forEach((point) => {\n      const status = hitTestPoint(target, point as TransformedPoint, rotated);\n      if (status) {\n        list.push({ index: point.index, distance: status.distance });\n      }\n    });\n    return list.length ? { points: list } : null;\n  };\n\n/** @internal */\nexport const createAreaHitTester = createContinuousSeriesHitTesterCreator((rotated) => {\n  const path: PathFn = area() as any;\n  const hitArea = rotated ? dRotateArea : dArea;\n  if (rotated) {\n    path.x1!(hitArea.x1!());\n    path.x0!(hitArea.x0!());\n    path.y(hitArea.y());\n  } else {\n    path.x(hitArea.x());\n    path.y1!(hitArea.y1!());\n    path.y0!(hitArea.y0!());\n  }\n  return path;\n});\n\n/** @internal */\nexport const createLineHitTester = createContinuousSeriesHitTesterCreator((rotated) => {\n  const path: PathFn = area() as any;\n  const hitLine = rotated ? dRotateLine : dLine;\n  if (rotated) {\n    const getX = hitLine.x();\n    path.y(hitLine.y());\n    path.x0!(point => getX(point) + LINE_TOLERANCE);\n    path.x1!(point => getX(point) - LINE_TOLERANCE);\n  } else {\n    const getY = hitLine.y();\n    path.x(hitLine.x());\n    path.y1!(point => getY(point) - LINE_TOLERANCE);\n    path.y0!(point => getY(point) + LINE_TOLERANCE);\n  }\n  return path;\n});\n\n/** @internal */\nexport const createSplineHitTester = createContinuousSeriesHitTesterCreator((rotated) => {\n  const path: PathFn = area() as any;\n  const hitSpline = rotated ? dRotateSpline : dSpline;\n  if (rotated) {\n    const getX = hitSpline.x();\n    path.y(hitSpline.y());\n    path.x1!(point => getX(point) - LINE_TOLERANCE);\n    path.x0!(point => getX(point) + LINE_TOLERANCE);\n  } else {\n    const getY = hitSpline.y();\n    path.x(hitSpline.x());\n    path.y1!(point => getY(point) - LINE_TOLERANCE);\n    path.y0!(point => getY(point) + LINE_TOLERANCE);\n  }\n  path.curve!(hitSpline.curve!());\n  return path;\n});\n\nconst hitTestRect = (dx: number, dy: number, halfX: number, halfY: number) => (\n  Math.abs(dx) <= halfX && Math.abs(dy) <= halfY ? {\n    distance: getSegmentLength(dx, dy),\n  } : null\n);\n\n// Some kind of binary search can be used here as bars can be ordered along argument axis.\n/** @internal */\nexport const createBarHitTester = createPointsEnumeratingHitTesterCreator(\n  ([px, py], point, rotated) => {\n    const {\n      arg, val, startVal, barWidth, maxBarWidth,\n    } = point as BarSeries.PointProps;\n    const halfWidth = maxBarWidth * barWidth / 2;\n    const halfHeight = Math.abs(val - startVal!) / 2;\n    const centerVal = (val + startVal!) / 2;\n    const xCenter = rotated ? centerVal : arg;\n    const yCenter = rotated ? arg : centerVal;\n    return hitTestRect(\n      px - xCenter,\n      py - yCenter,\n      rotated ? halfHeight : halfWidth,\n      rotated ? halfWidth : halfHeight,\n    );\n  },\n);\n\n/** @internal */\nexport const createScatterHitTester = createPointsEnumeratingHitTesterCreator(\n  ([px, py], obj, rotated) => {\n    const { point } = obj as ScatterSeries.PointProps;\n    const distance = getDistance([px, py], obj, rotated);\n    return distance <= point.size / 2 ? { distance } : null;\n  },\n);\n\nconst mapAngleTod3 = (angle: number) => {\n  const ret = angle + Math.PI / 2;\n  return ret >= 0 ? ret : ret + Math.PI * 2;\n};\n\n// Some kind of binary search can be used here as pies can be ordered along angle axis.\n/** @internal */\nexport const createPieHitTester = createPointsEnumeratingHitTesterCreator(\n  ([px, py], point) => {\n    const {\n      arg: x, val: y, innerRadius, outerRadius, startAngle, maxRadius, endAngle,\n    } = point as PieSeries.PointProps;\n    const inner = innerRadius * maxRadius;\n    const outer = outerRadius * maxRadius;\n    const rCenter = (inner + outer) / 2;\n    const angleCenter = (startAngle + endAngle) / 2;\n    const halfRadius = (outer - inner) / 2;\n    const halfAngle = Math.abs(startAngle - endAngle) / 2;\n    const dx = px - x;\n    const dy = py - y;\n    const r = getSegmentLength(dx, dy);\n    const angle = mapAngleTod3(Math.atan2(dy, dx));\n    // This is not a correct distance calculation but for now it will suffice.\n    // For Pie series it would not be actually used.\n    return hitTestRect(r - rCenter, angle - angleCenter, halfRadius, halfAngle);\n  },\n);\n\nconst buildFilter = (targets: TargetList): Filter => {\n  const result = {};\n  targets.forEach(({ series, point }) => {\n    (result[series] = result[series] || new Set()).add(point);\n  });\n  return result;\n};\n\n/** @internal */\nexport const changeSeriesState = (seriesList: SeriesList, targets: TargetList, state: string) => {\n  if (targets.length === 0) {\n    return seriesList;\n  }\n  const filter = buildFilter(targets);\n  let matches = 0;\n  const result = seriesList.map((seriesItem) => {\n    const set = filter[seriesItem.name];\n    if (!set) {\n      return seriesItem;\n    }\n    matches += 1;\n    const props: { state: string, points?: TransformedPoint[] } = { state };\n    if (set.size) {\n      props.points = (seriesItem.points as TransformedPoint[]).map(\n        point => (set.has(point.index) ? { ...point, state } : point),\n      );\n    }\n    return { ...seriesItem, ...props };\n  });\n  // This is to prevent false rerenders.\n  return matches > 0 ? result : seriesList;\n};\n","import { SeriesList, LegendItemList } from '../types';\n\nconst getDefaultLegendItems = (series: SeriesList): LegendItemList => series.map(\n  ({ name: text, color }) => ({ text, color }),\n);\n\nconst getPieLegendItems = (series: SeriesList): LegendItemList => series[0]\n  .points.map(({ argument: text, color }) => ({ text, color }));\n\n// The function supports special case when there is single Pie series.\n// There is no common way to tell if series is PieSeries -\n// checking `radius` props will suffice for now.\nconst isSinglePieSeriesCase = (series: SeriesList) => (\n  series.length === 1 && 'innerRadius' in series[0] && 'outerRadius' in series[0]\n);\n\n/** @internal */\nexport const getLegendItems = (series: SeriesList) => (\n  (isSinglePieSeriesCase(series) ? getPieLegendItems : getDefaultLegendItems)(series)\n);\n","import { hasWindow } from '@devexpress/dx-core';\nimport { getEventCoords, getOffset } from './common';\nimport {\n  TrackerTarget, HandlerFnList, SeriesList, HitTesters,\n  EventHandlerFn, TargetData, EventHandlers, HandlersObject,\n} from '../types';\n\nconst DISTANCE_THRESHOLD = 20;\n\nconst compareHitTargets = (t1: TrackerTarget, t2: TrackerTarget) => {\n  const distanceDelta = t1.distance - t2.distance;\n  if (Math.abs(distanceDelta) <= DISTANCE_THRESHOLD) {\n    const orderDelta = t2.order - t1.order;\n    return orderDelta !== 0 ? orderDelta : distanceDelta;\n  }\n  return distanceDelta;\n};\n\nconst buildEventHandler = (seriesList: SeriesList, handlers: HandlerFnList): EventHandlerFn => {\n  let hitTesters: HitTesters | null = null;\n\n  const createHitTesters = () => {\n    const obj: HitTesters = {};\n    seriesList.forEach((seriesItem) => {\n      obj[seriesItem.symbolName as unknown as string] = seriesItem\n      .createHitTester(seriesItem.points, seriesItem.rotated);\n    });\n    return obj;\n  };\n\n  return (e) => {\n    const location = getEventCoords(e, getOffset(e.currentTarget));\n    hitTesters = hitTesters || createHitTesters();\n    const targets: TrackerTarget[] = [];\n    seriesList.forEach(({ name: series, index: order, symbolName }) => {\n      const status = hitTesters![symbolName as unknown as string](location);\n      if (status) {\n        targets.push(...status.points.map(\n          point => ({\n            series, order, point: point.index, distance: point.distance,\n          }),\n        ));\n      }\n    });\n    targets.sort(compareHitTargets);\n    const arg: TargetData = { location, targets, event: e.nativeEvent };\n    handlers.forEach(handler => handler(arg));\n  };\n};\n\nconst buildLeaveEventHandler = (handlers: HandlerFnList): EventHandlerFn => (e) => {\n  const location = getEventCoords(e, getOffset(e.currentTarget));\n  const arg: TargetData = { location, targets: [] };\n  handlers.forEach(handler => handler(arg));\n};\n\n// The result is of Map<string, Function> type.\n// Keys are DOM event names (https://developer.mozilla.org/en-US/docs/Web/Events).\n/** @internal */\nexport const buildEventHandlers = (\n  seriesList: SeriesList, { clickHandlers, pointerMoveHandlers }: HandlersObject,\n) => {\n  const handlers: EventHandlers = {};\n  if (!hasWindow()) return handlers;\n  if (clickHandlers.length) {\n    handlers.click = buildEventHandler(seriesList, clickHandlers);\n  }\n  if (pointerMoveHandlers.length) {\n    const moveHandler = buildEventHandler(seriesList, pointerMoveHandlers);\n    const leaveHandler = buildLeaveEventHandler(pointerMoveHandlers);\n    if ('ontouchstart' in window) {\n      handlers.touchstart = moveHandler;\n    } else {\n      handlers.mousemove = moveHandler;\n      handlers.mouseleave = leaveHandler;\n    }\n  }\n  return handlers;\n};\n","import {\n  EasingFn, SetAttributeFn, AnimationFn, GetNewPositionsFn,\n  RangePointCoordinates, PointCoordinates, PointComponentProps,\n  PieCoordinates, PathStartCoordinates, PathEndCoordinates,\n} from '../types';\n\n/** @internal */\nconst getProgress = ({ elapsed, total }: {elapsed: number, total: number}) =>\nMath.min(elapsed / total, 1);\n\n/** @internal */\nconst runAnimation = (\n  setAttributes: SetAttributeFn,\n  getNewPositions: GetNewPositionsFn,\n  easing: EasingFn, duration: number, delay: number,\n) => new Promise((resolve) => {\n  setTimeout(() => {\n    const time = {\n      start: Date.now(),\n      total: duration,\n      elapsed: 0,\n    };\n    const step = () => {\n      time.elapsed = Date.now() - time.start;\n      const progress = getProgress(time);\n      setAttributes(getNewPositions(easing(progress)));\n\n      if (progress < 1) requestAnimationFrame(step);\n    };\n    resolve(requestAnimationFrame(step));\n  }, delay);\n});\n\n/** @internal */\nexport const buildAnimation = (easing: EasingFn, duration: number): AnimationFn => (\n  startCoords, endCoords, processAnimation, setAttributes, delay = 0,\n) => {\n  let animationID;\n\n  const stop = () => {\n    if (animationID) {\n      cancelAnimationFrame(animationID);\n      animationID = undefined;\n    }\n  };\n\n  const run = (start, end, delayValue) => {\n    animationID = runAnimation(\n      setAttributes, processAnimation(start, end),\n      easing, duration, delayValue,\n    ).then((res) => {\n      animationID = res;\n    });\n  };\n\n  run(startCoords, endCoords, delay);\n\n  return {\n    update: (updatedStartCoords, updatedEndCoords, updatedDelay = 0) => {\n      stop();\n      run(updatedStartCoords, updatedEndCoords, updatedDelay);\n    },\n    stop,\n  };\n};\n\nconst lerp = (a: number, b: number, t: number) => a + t * (b - a);\n\n/** @internal */\nexport const processPointAnimation = (\n  startCoords: PointCoordinates, endCoords: PointComponentProps,\n) => {\n  return (progress: number) => {\n    return {\n      arg: lerp(startCoords.arg, endCoords.arg, progress),\n      val: lerp(startCoords.val, endCoords.val, progress),\n    };\n  };\n};\n\n/** @internal */\nexport const processBarAnimation = (\n  startCoords: RangePointCoordinates, endCoords: PointComponentProps,\n) => {\n  return (progress: number) => {\n    return {\n      arg: lerp(startCoords.arg, endCoords.arg, progress),\n      val: lerp(startCoords.val, endCoords.val, progress),\n      startVal: lerp(startCoords.startVal, endCoords.startVal, progress),\n    };\n  };\n};\n\n/** @internal */\nexport const processLineAnimation = (\n  { coordinates }: PathStartCoordinates,\n  { coordinates: endCoordinates }: PathEndCoordinates,\n) => {\n  return (progress: number) => {\n    return {\n      coordinates: endCoordinates.map((coord, index) => {\n        const startCurCoord = coordinates[index];\n        return {\n          ...coord,\n          arg: lerp(startCurCoord.arg, coord.arg, progress),\n          val: lerp(startCurCoord.val, coord.val, progress),\n        };\n      }),\n    };\n  };\n};\n\n/** @internal */\nexport const processAreaAnimation = (\n  { coordinates }: PathStartCoordinates,\n  { coordinates: endCoordinates }: PathEndCoordinates,\n) => {\n  return (progress: number) => {\n    return {\n      coordinates: endCoordinates.map((coord, index) => {\n        const startCurCoord = coordinates[index];\n        return {\n          ...coord,\n          arg: lerp(startCurCoord.arg, coord.arg, progress),\n          val: lerp(startCurCoord.val, coord.val, progress),\n          startVal: lerp(startCurCoord.startVal, coord.startVal, progress),\n        };\n      }),\n    };\n  };\n};\n\n/** @internal */\nexport const processPieAnimation = (start: PieCoordinates, end: PieCoordinates) => {\n  return (progress: number) => {\n    return {\n      innerRadius: lerp(start.innerRadius, end.innerRadius, progress),\n      outerRadius: lerp(start.outerRadius, end.outerRadius, progress),\n      startAngle: lerp(start.startAngle, end.startAngle, progress),\n      endAngle: lerp(start.endAngle, end.endAngle, progress),\n    };\n  };\n};\n"],"names":["d3ScaleLinear","d3ScaleBand","_a","scaleBand","getStartVal","getRect"],"mappings":"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"}