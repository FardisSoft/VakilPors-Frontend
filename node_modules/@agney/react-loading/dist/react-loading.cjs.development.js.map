{"version":3,"file":"react-loading.cjs.development.js","sources":["../src/LoaderContext.tsx","../src/useLoading.tsx"],"sourcesContent":["import React, { createContext, ReactElement, ReactNode, useContext, useMemo } from 'react';\n\ninterface ContextProps {\n  indicator: ReactElement | null;\n}\n\ninterface ProviderProps extends ContextProps {\n  children: ReactNode;\n}\n\nconst defaultValue = {\n  indicator: null,\n};\n\nconst LoaderContext = createContext<ContextProps>(defaultValue);\nexport const useLoaderContext = () => useContext(LoaderContext);\n\nexport const LoaderProvider = ({ indicator, children }: ProviderProps) => {\n  const value = useMemo(\n    () => ({\n      indicator: indicator,\n    }),\n    [indicator]\n  );\n\n  return (\n    <LoaderContext.Provider value={value}>{children}</LoaderContext.Provider>\n  );\n};\n","import { cloneElement, ReactElement, isValidElement } from 'react';\nimport invariant from 'tiny-invariant';\n\nimport { useLoaderContext } from './LoaderContext';\n\ninterface Props {\n  loading?: boolean;\n  indicator?: ReactElement | null;\n  loaderProps?: {\n    /** Description of progressbar and what it is loading */\n    valueText?: string;\n  }\n}\n\ntype AriaLive = 'off' | 'assertive' | 'polite' | undefined;\n\n/**\n * Hook returning Indicator element according to loading argument.\n * @example const { containerProps, indicatorEl } = useLoading({ loading: true })\n */\nexport function useLoading({ loading = false, indicator, loaderProps = {} }: Props) {\n  const containerProps = {\n    'aria-busy': loading,\n    'aria-live': 'polite' as AriaLive,\n  };\n\n  const loaderContext = useLoaderContext();\n  const indicatorEl = indicator ?? loaderContext?.indicator;\n  invariant(isValidElement(indicatorEl), 'Expected a valid React element as indicator');\n\n  const accessibleLoaderProps = (() => {\n    const { valueText, ...rest } = loaderProps;\n    return {\n      role: 'progressbar',\n      'aria-valuetext': valueText,\n      ...rest,\n    }\n  })();\n  const accessibleIndicator = indicatorEl ? cloneElement(indicatorEl, accessibleLoaderProps) : null;\n\n  return {\n    containerProps,\n    indicatorEl: loading ? accessibleIndicator : null,\n  };\n}\n"],"names":["defaultValue","indicator","LoaderContext","createContext","useLoaderContext","useContext","LoaderProvider","children","value","useMemo","React","Provider","useLoading","loading","loaderProps","containerProps","loaderContext","indicatorEl","isValidElement","invariant","accessibleLoaderProps","valueText","rest","role","accessibleIndicator","cloneElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,IAAMC,aAAa,gBAAGC,mBAAa,CAAeH,YAAf,CAAnC;AACO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAMC,gBAAU,CAACH,aAAD,CAAhB;AAAA,CAAzB;IAEMI,cAAc,GAAG,SAAjBA,cAAiB;MAAGL,iBAAAA;MAAWM,gBAAAA;AAC1C,MAAMC,KAAK,GAAGC,aAAO,CACnB;AAAA,WAAO;AACLR,MAAAA,SAAS,EAAEA;AADN,KAAP;AAAA,GADmB,EAInB,CAACA,SAAD,CAJmB,CAArB;AAOA,SACES,4BAAA,CAACR,aAAa,CAACS,QAAf;AAAwBH,IAAAA,KAAK,EAAEA;GAA/B,EAAuCD,QAAvC,CADF;AAGD;;ACZD;;;;;AAIA,SAAgBK;0BAAaC;MAAAA,oCAAU;MAAOZ,iBAAAA;8BAAWa;MAAAA,4CAAc;AACrE,MAAMC,cAAc,GAAG;AACrB,iBAAaF,OADQ;AAErB,iBAAa;AAFQ,GAAvB;AAKA,MAAMG,aAAa,GAAGZ,gBAAgB,EAAtC;AACA,MAAMa,WAAW,GAAGhB,SAAH,WAAGA,SAAH,GAAgBe,aAAhB,oBAAgBA,aAAa,CAAEf,SAAhD;AACA,GAAUiB,oBAAc,CAACD,WAAD,CAAxB,IAAAE,SAAS,QAA8B,6CAA9B,CAAT,CAAA;;AAEA,MAAMC,qBAAqB,GAAI;QACrBC,YAAuBP,YAAvBO;QAAcC,qCAASR;;AAC/B;AACES,MAAAA,IAAI,EAAE,aADR;AAEE,wBAAkBF;AAFpB,OAGKC,IAHL;AAKD,GAP6B,EAA9B;;AAQA,MAAME,mBAAmB,GAAGP,WAAW,GAAGQ,kBAAY,CAACR,WAAD,EAAcG,qBAAd,CAAf,GAAsD,IAA7F;AAEA,SAAO;AACLL,IAAAA,cAAc,EAAdA,cADK;AAELE,IAAAA,WAAW,EAAEJ,OAAO,GAAGW,mBAAH,GAAyB;AAFx}